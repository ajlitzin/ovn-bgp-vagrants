---

- name: Network appliance configuration
  hosts: spine-*,rack-1-leaf*, rack-2-leaf*
  become: true

  handlers:
    - name: Import re-usable handlers
      ansible.builtin.import_tasks: "handlers/main.yaml"

  tasks:
    - name: Configure interfaces
      ansible.builtin.template:
        src: "{{ interfaces_conf_file }}"
        dest: /etc/network/interfaces
        validate: ifup -a -s -i %s
        mode: "0644"
      notify: Apply interface changes

    - name: Configure FRR daemons file
      ansible.builtin.template:
        src: "{{ frr_daemons_file }}"
        dest: /etc/frr/daemons
        mode: "0640"
      notify:
        - Restart frr

    - name: Configure FRR
      ansible.builtin.template:
        src: "{{ frr_conf_file }}"
        dest: /etc/frr/frr.conf
        validate: vtysh -f %s --dryrun
        mode: "0640"
      notify:
        - Reload frr

- name: Configure Servers
  hosts: rack-1-host*
  gather_facts: false
  become: true

  vars_files:
    - group_vars/linux-hosts.yaml

  handlers:
    - name: Import re-usable handlers
      ansible.builtin.import_tasks: "handlers/main.yaml"

  tasks:
    - name: Build list of YUM repo files
      ansible.builtin.find:
        paths:
          - /etc/yum.repos.d/
        patterns:
          - 'CentOS-*'
        use_regex: false
      register: yum_repo_files

    - name: Comment out YUM mirrorlist links
      ansible.builtin.replace:
        dest: "{{ item.path }}"
        regexp: '^mirrorlist'
        replace: '#mirrorlist'
        backup: true
      loop: "{{ yum_repo_files.files }}"

    - name: Replace YUM baseurl
      ansible.builtin.replace:
        dest: "{{ item.path }}"
        regexp: '^#baseurl=http://mirror.centos.org'
        replace: 'baseurl=http://vault.centos.org'
      loop: "{{ yum_repo_files.files }}"

    - name: Install FRR
      ansible.builtin.yum:
        name: frr
        state: installed

    - name: Ensure zebra and bgpd daemons are enabled
      ansible.builtin.lineinfile:
        path: /etc/frr/daemons
        regexp: '(^zebra|bgpd=)no'
        backrefs: true
        line: '\g<1>yes'
        state: present

# zebra_options=("-A 127.0.0.1 --vrfwnetns")
    - name: Ensure VRFWNETNS is enabled at the zebra options
      ansible.builtin.lineinfile:
        path: /etc/frr/daemons
        regexp: '--vrfwnetns'
        state: absent
      check_mode: true
      changed_when: false
      register: vrfwnetns_found

    - name: Add missing VRFWNETNS to zebra options
      ansible.builtin.lineinfile:
        path: /etc/frr/daemons
        regexp: 'zebra_options=(.*)(\"\))'
        line: 'zebra_options=\g<1> --vrfwnetns\g<2>'
      when: not vrfwnetns_found.found

    - name: Configure FRR
      ansible.builtin.template:
        src: "{{ frr_conf_file }}"
        dest: /etc/frr/frr.conf
        validate: vtysh -f %s --dryrun
        mode: "0640"
      notify:
        - Reload frr

    - name: Start frr now and on boot
    # FCN of module does not work; get module not found error
      systemd:
        state: started
        enabled: true
        name: frr

    - name: Configure dummy interface IP
      community.general.nmcli:
        type: dummy
        conn_name: '{{ item.conn_name }}'
        ip4: '{{ item.ip4 }}'
        state: present
      with_items:
        - '{{ nmcli_dummy }}'

    - name: Configure Ethernet interface IPs
      community.general.nmcli:
        type: ethernet
        conn_name: '{{ item.conn_name }}'
        ip4: '{{ item.ip4 }}'
        state: present
      with_items:
        - '{{ nmcli_ethernet }}'

# We need to ensure that the default route is using the leafs. For rack-X-host-1 should be the next:
# sudo ip route a 0.0.0.0/0 src 99.99.X.1 nexthop via 100.65.X.1 dev eth1 nexthop via 100.64.X.1 dev eth2
# And for rack-X-host-2 the next:
# sudo ip route a 0.0.0.0/0 src 99.99.X.2 nexthop via 100.65.X.5 dev eth1 nexthop via 100.64.X.5 dev eth2

    - name: Configure static routes for rack-1-host-1
      ansible.builtin.command:
        cmd: "ip route a 0.0.0.0/0 src {{ lo1_ipv4 }} nexthop via 100.65.1.1 dev eth1 nexthop via 100.64.1.1 dev eth2"
      register: ip_route_result
      changed_when: "ip_add_result.rc != 0"
      when: inventory_hostname == 'rack-1-host-1'

    # could reduce this by using hostvars for leaf1/2 ips
    - name: Configure static routes for rack-1-host-2
      ansible.builtin.command:
        cmd: "ip route a 0.0.0.0/0 src {{ lo1_ipv4 }} nexthop via 100.65.1.5 dev eth1 nexthop via 100.64.1.5 dev eth2"
      register: ip_route_result
      changed_when: "ip_add_result.rc != 0"
      when: inventory_hostname == 'rack-1-host-2'

    - name: Configure static routes for rack-2-host-1
      ansible.builtin.command:
        cmd: "ip route a 0.0.0.0/0 src {{ lo1_ipv4 }} nexthop via 100.65.2.1 dev eth1 nexthop via 100.64.2.1 dev eth2"
      register: ip_route_result
      changed_when: "ip_add_result.rc != 0"
      when: inventory_hostname == 'rack-2-host-1'

    - name: Configure static routes for rack-2-host-2
      ansible.builtin.command:
        cmd: "ip route a 0.0.0.0/0 src {{ lo1_ipv4 }} nexthop via 100.65.2.5 dev eth1 nexthop via 100.64.2.5 dev eth2"
      register: ip_route_result
      changed_when: "ip_add_result.rc != 0"
      when: inventory_hostname == 'rack-2-host-2'
